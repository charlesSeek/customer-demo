name: Customer CI/CD Workflow

on: 
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    # Checkout the repo
    - uses: actions/checkout@v2
    
    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
    # Install dependencies and test for UI
    - name: Install dependencies and test UI
      run: |
        cd ui
        yarn install
        yarn test
        yarn build
      env:
        CI: true

    # Install dependencies and test for API
    - name: Install dependencies and test API
      run: |
        cd api
        yarn install
        yarn test
        yarn package
      env:
        CI: true

    # Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.0.0'  # specify your Terraform version

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: "ap-southeast-2"

    # Initialize Terraform
    - name: Terraform Init
      run: |
        terraform init
      working-directory: .

    # Apply Terraform
    - name: Terraform Apply
      run: |
        terraform apply -auto-approve
      working-directory: .
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: 'ap-southeast-2'
    # Sync build directory to AWS S3
    - name: Deploy to S3
      run: |
        aws s3 sync ui/build s3://customers-d8ef89cc58dd845d
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
